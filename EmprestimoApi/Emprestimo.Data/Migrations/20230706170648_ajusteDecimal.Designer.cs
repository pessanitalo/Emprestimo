// <auto-generated />
using System;
using CredEmprestimo.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CredEmprestimo.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230706170648_ajusteDecimal")]
    partial class ajusteDecimal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CredEmprestimo.Business.Models.BoletoEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDePagamento")
                        .HasColumnType("date");

                    b.Property<int>("EmprestimoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDaParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.ToTable("Boleto", (string)null);
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<decimal>("SaldoAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAquisicaoEmprestimo")
                        .HasColumnType("date");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDaParcela")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorEmprestimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Emprestimo", (string)null);
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.BoletoEmprestimo", b =>
                {
                    b.HasOne("CredEmprestimo.Business.Models.Emprestimo", "Emprestimo")
                        .WithMany("BoletoEmprestimo")
                        .HasForeignKey("EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.Emprestimo", b =>
                {
                    b.HasOne("CredEmprestimo.Business.Models.Cliente", "Cliente")
                        .WithOne("Emprestimo")
                        .HasForeignKey("CredEmprestimo.Business.Models.Emprestimo", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.Cliente", b =>
                {
                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("CredEmprestimo.Business.Models.Emprestimo", b =>
                {
                    b.Navigation("BoletoEmprestimo");
                });
#pragma warning restore 612, 618
        }
    }
}
